<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication
		   xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/halo"
		   xmlns:c="com.mailbrew.components.*"
		   width="500" height="400" minWidth="500" minHeight="400"
		   showStatusBar="false"
		   applicationComplete="onApplicationComplete();">

	<fx:Script>
		<![CDATA[
			import com.adobe.air.notification.AbstractNotification;
			import com.mailbrew.commands.AppExitCommand;
			import com.mailbrew.controller.Controller;
			import com.mailbrew.data.AccountTypes;
			import com.mailbrew.data.MainAppViews;
			import com.mailbrew.events.AppExitEvent;
			import com.mailbrew.events.DeleteAccountEvent;
			import com.mailbrew.events.InitEvent;
			import com.mailbrew.model.ModelLocator;
			import com.mailbrew.util.StatusBarManager;
			
			import flash.events.Event;
			import flash.events.InvokeEvent;
			import flash.events.MouseEvent;
			import flash.events.ScreenMouseEvent;
			import flash.geom.Rectangle;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.events.ListEvent;
			import mx.events.PropertyChangeEvent;
			import mx.messaging.events.ChannelEvent;
			
			import spark.events.IndexChangeEvent;
			
			private var controller:Controller;
			private var ml:ModelLocator;
			
			private function onApplicationComplete():void
			{
				this.nativeApplication.addEventListener(Event.EXITING, onApplicationExiting);
				this.nativeWindow.addEventListener(Event.CLOSING, onWindowClosing);
				if (NativeApplication.supportsDockIcon) // Mac
				{
					NativeApplication.nativeApplication.addEventListener(InvokeEvent.INVOKE, onShowWindow);
				}
				else // Windows
				{
					SystemTrayIcon(NativeApplication.nativeApplication.icon).addEventListener(ScreenMouseEvent.CLICK, onShowWindow);
				}
				
				this.controller = new Controller();
				this.ml = ModelLocator.getInstance();

				ChangeWatcher.watch(ModelLocator.getInstance(), "mainAppView", onMainAppViewChange);
				ChangeWatcher.watch(ModelLocator.getInstance(), "accounts", onAccountsChange);
				ml.mainAppView = MainAppViews.INTRO;

				var initialBounds:Rectangle = new Rectangle((Screen.mainScreen.bounds.width / 2 - (this.width/2)), (Screen.mainScreen.bounds.height / 2 - (this.height/2)), this.width, this.height);
				this.nativeWindow.bounds = initialBounds;
				this.visible = true;
				
				new InitEvent().dispatch();
				
				StatusBarManager.showMessage("Welcome to MailBrew");
			}
						
			private function onWindowClosing(e:Event):void
			{
				e.preventDefault();
				this.visible = false;
			}
			
			private function onShowWindow(e:Event):void
			{
				this.visible = true;
				this.nativeWindow.activate();
			}
			
			private function onApplicationExiting(e:Event):void
			{
				e.preventDefault();
				this.nativeApplication.removeEventListener(Event.EXITING, onApplicationExiting);
				new AppExitEvent().dispatch();
			}
			
			private function onMainAppViewChange(e:PropertyChangeEvent):void
			{
				if (ModelLocator.getInstance().mainAppView == MainAppViews.INTRO)
				{
					this.currentState = "intro";
				}
				else
				{
					this.currentState = "started";
				}
			}

			private function onAccountsChange(e:PropertyChangeEvent):void
			{
				var accounts:ArrayCollection = this.ml.accounts;
				if (accounts == null || accounts.length == 0)
				{
					ml.mainAppView = MainAppViews.INTRO;
				}
			}

		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="intro"/>
		<s:State name="started"/>
	</s:states>
	
	<s:transitions>
		<s:Transition fromState="intro" toState="started">
			<s:Fade targets="{[introComp, accountFormComp]}"/>
		</s:Transition>
	</s:transitions>
	
	<c:CommandBar left="0" right="0" top="0" height="30"/>
	<c:AccountList left="5" top="50" bottom="30"/>
	<c:Intro id="introComp" top="30" left="130" includeIn="intro"/>
	<c:AccountForm id="accountFormComp" top="30" left="120" includeIn="started"/>
	<c:Status bottom="0" left="0" right="0" height="20"/>
</s:WindowedApplication>
