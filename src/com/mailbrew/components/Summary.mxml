<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/halo"
		  type="lightweight" systemChrome="none" transparent="true"
		  showStatusBar="false" backgroundAlpha="0" alwaysInFront="true"
		  mouseDown="onMouseDown(event);" mouseUp="onMouseUp(event);" mouseWheel="onMouseWheel(event);"
		  creationComplete="onCreationComplete();" width="200" height="200" resizable="false">
	<fx:Script>
		<![CDATA[
			import com.mailbrew.data.PreferenceKeys;
			import com.mailbrew.model.ModelLocator;
			import com.mailbrew.util.ServiceToURLMapper;
			import com.mailbrew.util.WindowManager;
			
			import flash.events.MouseEvent;
			import flash.geom.Point;
			import flash.net.URLRequest;
			import flash.net.navigateToURL;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.events.PropertyChangeEvent;
			
			import spark.skins.spark.ListSkin;

			private var ml:ModelLocator;
			private var globalPoint:Point;
			
			private function onCreationComplete():void
			{
				this.ml = ModelLocator.getInstance();
				ChangeWatcher.watch(ml, "accounts", onAccountsChange);
				ListSkin(this.accountSummaryList.skin).background.alpha = 0;
				ListSkin(this.accountSummaryList.skin).border.alpha = 0;
				this.onAccountsChange();
				if (this.globalPoint != null)
				{
					this.nativeWindow.x = globalPoint.x;
					this.nativeWindow.y = globalPoint.y;
					this.verifyPosition();
				}
			}
			
			private function onMouseDown(e:MouseEvent):void
			{
				this.nativeWindow.startMove();
			}
			
			private function onMouseUp(e:MouseEvent):void
			{
				var newLocation:Point = new Point(this.nativeWindow.bounds.x, this.nativeWindow.bounds.y);
				this.ml.prefs.setValue(PreferenceKeys.SUMMARY_WINDOW_POINT, newLocation);
				this.ml.prefs.save();
			}
			
			private function onMouseWheel(e:MouseEvent):void
			{
				var delta:int = (e.delta < 0) ? -1 : 1;
				if (alpha >= .1 || e.delta > 0)
				{
					alpha += (delta / 50);
				}
			}
			
			private function onAccountsChange(e:PropertyChangeEvent = null):void
			{
				if (this.ml.accounts)
				{
					this.height = (ml.accounts.length * 25) + 14;
					this.verifyPosition();
				}
			}
			
			public function setLocation(p:Point):void
			{
				this.globalPoint = p;
				if (this.nativeWindow != null)
				{
					this.nativeWindow.x = p.x;
					this.nativeWindow.y = p.y;
					this.verifyPosition();
				}
			}

			private function onAccountSelect():void
			{
				if (this.accountSummaryList.selectedItem != null)
				{
					var item:Object = this.accountSummaryList.selectedItem;
					var url:String = ServiceToURLMapper.getServiceURL(item.accountType, item.username);
					if (url != null)
					{
						navigateToURL(new URLRequest(url));
					}
				}
			}
			
			private function verifyPosition():void
			{
				var screens:Array = Screen.getScreensForRectangle(this.nativeWindow.bounds);
				if (screens.length == 0)
				{
					var mainScreen:Screen = Screen.mainScreen;
					var newPoint:Point = new Point(mainScreen.visibleBounds.x + 2, mainScreen.visibleBounds.y + 2);
					this.setLocation(newPoint);
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:DesignLayer>
		<s:Rect height="100%" width="100%" x="0" y="0" alpha=".75" radiusX="10" id="background">
			<s:fill>
				<s:SolidColor color="0x000000"/>
			</s:fill>
		</s:Rect>
	</fx:DesignLayer>
	
	<s:HGroup width="100%" height="100%" paddingBottom="7" paddingTop="7" paddingLeft="5" paddingRight="5" verticalAlign="middle">
		<s:List id="accountSummaryList" buttonMode="true" useHandCursor="true"
				dataProvider="{ModelLocator.getInstance().accounts}"
				width="100%" height="100%"
				itemRenderer="com.mailbrew.components.skins.SummaryListRenderer"
				doubleClickEnabled="true" doubleClick="onAccountSelect();"/>
	</s:HGroup>
</s:Window>
